services:
  db:
    image: postgres:15-alpine
    container_name: infernode-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./db-data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "${DB_PORT:-5432}:5432"

  api:
    build: .
    restart: unless-stopped
    container_name: infernode-api
    command: sh -c "chmod +x ./scripts/* && ./scripts/wait-for-db.sh && npm run keys:generate && chown -R 1000 . && npm run dev"
    env_file:
      - .env
    volumes:
      - .:/app/
      - /app/node_modules
      - /app/keys
    ports:
      - "${INF_PORT:-3000}:3000"
    environment:
      DB_HOST: db # use docker network hostname
      PORT: ${INF_PORT:-3000}
      NODE_ENV: ${NODE_ENV}
      DB_PORT: ${DB_PORT:-5432}
      DB_USERNAME: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME:-infernode}
      DB_DIALECT: postgres
    depends_on:
      - db

volumes:
  db-data:
