services:
  app:
    build: .
    container_name: infernode-app
    ports:
      - "${API_HOST:-3000}:3000"
    env_file: .env
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src/:/app/src
      - ./tsconfig.json:/app/tsconfig.json

  postgres:
    image: postgres:latest
    restart: unless-stopped
    container_name: infernode_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    env_file: .env
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: "exit 0"

volumes:
  postgres_data:
